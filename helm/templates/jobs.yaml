apiVersion: batch/v1
kind: Job
metadata:
  name: job-initial-setup
  namespace: {{ .Values.namespace }}
spec:
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      name: job-initial-setup
    spec:
      {{- if .Values.setup.image.is_private }}
      imagePullSecrets:
        - name: "{{ .Values.setup.image.credentials }}"
      {{- end }}
      containers:
        - name: job-initial-setup
          image: "{{ .Values.setup.image.name }}:{{ .Values.setup.image.tag }}"
          imagePullPolicy: {{ .Values.setup.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Waiting for 30 seconds before starting..."
              sleep 30
              echo "Starting entrypoint script..."
              ./entrypoint.sh
          env:
            - name: APP_NAME
              value: "{{ .Values.nameOverride }}"
            - name: APP_ENV
              value: "{{ .Values.env }}"

            {{- if .Values.db.enabled }}
            - name: DB_TYPE
              value: postgres
            - name: DB_NAME
              value: "postgres"
            - name: DB_HOST
              value: "db.{{ .Values.namespace }}.svc.cluster.local"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD_SUPERUSER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_PASSWORD_SUPERUSER
            - name: DB_USER_HOCUSPOCUS
              value: "hocuspocus_user"
            - name: DB_NAME_HOCUSPOCUS
              value: "hocuspocus"
            - name: DB_PASSWORD_HOCUSPOCUS
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_PASSWORD_HOCUSPOCUS
            - name: DB_USER_SERVER
              value: "server_user"
            - name: DB_NAME_SERVER
              value: "server"
            - name: DB_PASSWORD_SERVER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: DB_PASSWORD_SERVER
            {{- else }}
            - name: DB_TYPE
              value: "{{ .Values.config.db.type }}"
            - name: DB_HOST
              value: "{{ .Values.config.db.host }}.{{ .Values.namespace }}.svc.cluster.local"
            - name: DB_PORT
              value: "{{ .Values.config.db.port }}"
            - name: DB_USER
              value: "{{ .Values.config.db.user }}"
            - name: DB_PASSWORD_SUPERUSER
              value: "{{ .Values.config.db.password }}"
            - name: DB_USER_HOCUSPOCUS
              value: "{{ .Values.config.db.user }}"
            - name: DB_NAME_HOCUSPOCUS
              value: "{{ .Values.config.db.hocuspocus_database }}"
            - name: DB_PASSWORD_HOCUSPOCUS
              value: "{{ .Values.config.db.password }}"
            - name: DB_USER_SERVER
              value: "{{ .Values.config.db.user }}"
            - name: DB_NAME_SERVER
              value: "{{ .Values.config.db.server_database }}"
            - name: DB_PASSWORD_SERVER
              value: "{{ .Values.config.db.password }}"
            {{- end }}
      restartPolicy: Never
  backoffLimit: 4